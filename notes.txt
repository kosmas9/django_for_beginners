#venv using pipenv
pip isntall pipenv
pipenv install <package>
pipenv shell to start working in the venv


## initial steps
#1 create a new django project
#2 create a new app
#3 update settings.py

# start a new django Project (don't forget to use . to avoid creating a new directory)
django-admin startproject helloworld_project .

# start an app
python manage.py startapp pages
then, add this app in the settings.py file of our project, in the INSTALLED_APPS list (app.apps.PagesConfig)
/////////////////////////////////////////////////////////////////////////////////
# views -> what content is displayed on a given page
# urls -> where that content is going (we need to create a urls.py in our app)
from django.urls import path
# urls(project) -> each app needs its own route
///////////////////////////////////////////////////////////////////////////////

# start server
python manage.py runserver

#templates -> where HTML code lives
#1 create a single project-level templates directory
#2 update settings.py file, TEMPLATES list -> "DIRS": [os.path.join(BASE_DIR,'templates')],

# class-based views
#1 update the app/views.py file -> from dgango.views.generic import TemplateView
#2 create a class that will point to our html file -> class HomePageView(TemplateView):tempalte_name='home.html'

# URLs
#1 update the project-level urls.py file -> in urlpatters list add another path with include, pointing to app.url ->  path('', include('pages.urls'))
#2 create the app-level urls.py file ->
    from django.urls import path
    from .views import HomePageView (this is the class that we created above)
    urlpatterns = [path('', HomePageView.as_view(), name='home')] (don't forget to add "as_view()" at the end of view name)

# Extending Templates
#1 create a base.html file
#2 extend the rest of the html files ->
    {% extends 'base.html' %}
    {% block content %}
    <h1> HomePage
    {% endblock content %}

# Tests
#1 update the app.tests.py
#2 run test -> python manage.py test

# GIT
#1 create a repository in github
#2 create a .gitignore file
#3 git commands to push reposotory ->
    git init
    git add -A
    git commit -m 'initial commit'
    git remote add origin https://github.com/kosmas9/django_for_beginners.git
    git branch -M main
    git push -u origin main